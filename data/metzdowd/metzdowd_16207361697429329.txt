<PRE>Jeff Hodges writes:
&gt;<i> If a purportedly &quot;secure&quot; protocol employing a nominal DH exchange in order to 
</I>&gt;<i> establish a shared secret key between a requester and responder, employs 
</I>&gt;<i> widely known published (on the web) fixed values for g (&quot;2&quot;) and p (a 
</I>&gt;<i> purportedly prime 1040 bit number) for many of it's implementations and 
</I>&gt;<i> runtime invocations, what are the risks its designers are assuming with 
</I>&gt;<i> respect to the resultant properties of ZZ?
</I>
This can be reasonably safe, if p is chosen properly. There is no problem
with using g=2, with the right p. The main issue is that with current
technology, a 1040 bit p stands a substantial chance of being broken.
A 1024 bit special-form number was factored last year, with claims that
the technique might apply to general RSA moduli of that size. Finding
discrete logs takes similar work.  A widely reused p value would be a
fat target for such an effort.

&gt;<i> I suspect that many implementations will simply use the equivalent of whatever 
</I>&gt;<i> rand() function is available to get the bits for their private keys directly, 
</I>&gt;<i> and will likely not reallocate private keys unless the implementation or 
</I>&gt;<i> machine are restarted. So if the random number generator has known flaws, then 
</I>&gt;<i> there may be some predictability in both the public keys and in ZZ, yes? 
</I>&gt;<i> Additionally there's the previously noted issue with the values of static 
</I>&gt;<i> private keys slowly leaking.
</I>
I'm not sure about this leaking, I asked Ashwood for clarification.
Certainly if the secret exponents are poorly chosen, the system will be
insecure. I would not necessarily assume that rand() is being used; I
would hope in this day and age that people would know better than that.
/dev/random on Linux&amp;Mac and CryptGenRandom on Windows should provide
adequate security for this use, and hopefully the implementors would be
aware of the need for secure random numbers.

Hal Finney

---------------------------------------------------------------------
The Cryptography Mailing List
Unsubscribe by sending &quot;unsubscribe cryptography&quot; to <A HREF="http://www.metzdowd.com/mailman/listinfo/cryptography">majordomo at metzdowd.com</A>

</PRE>