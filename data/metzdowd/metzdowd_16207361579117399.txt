<PRE>On Oct 30, 2007 6:24 AM,  &lt;<A HREF="http://www.metzdowd.com/mailman/listinfo/cryptography">travis+ml-cryptography at subspacefield.org</A>&gt; wrote:
&gt;<i> So back in the bad old days when hashing was DES encryption of the
</I>&gt;<i> zero vector with a fixed key, someone came up with salt as a password
</I>&gt;<i> strengthening mechanism.
</I>&gt;<i>
</I>&gt;<i> I'm not quite sure why it was called salt.
</I>&gt;<i>
</I>&gt;<i> It perturbed the S-boxes in DES IIRC, but essentially it was a known
</I>&gt;<i> bit of text that was an input to the algorithm that varied between
</I>&gt;<i> entries, like an IV does with encryption.
</I>&gt;<i>
</I>&gt;<i> If there isn't already a term for this, I'm going to call this
</I>&gt;<i> general concept &quot;individuation&quot;, or possibly &quot;uniquification&quot;.
</I>&gt;<i>
</I>&gt;<i> Nowadays with strong hash algorithms, but rainbow tables and
</I>&gt;<i> low-entropy passwords as the threat, I'm wondering what the best
</I>&gt;<i> practice is.
</I>&gt;<i>
</I>&gt;<i> I was thinking of simply prepending a block of text to each passphrase
</I>&gt;<i> prior to hashing, and storing it with the hash - similar to salts in
</I>&gt;<i> passwd entries.
</I>
well what you're describing is quite classically a salt, imho.


&gt;<i> It should have at least as much entropy as the hash output, maybe a
</I>&gt;<i> little more in case there's collisions.  If it were uniformly random,
</I>&gt;<i> you could simply XOR it with the passphrase prior to hashing and save
</I>&gt;<i> yourself some cycles, right?
</I>
well no. i mean to xor it (or probably what you mean: to otp it)
you'll need to have a &quot;salt&quot; who's length is equal to the input. that
would then mean that short inputs would result in short salts. i.e. a
password of &quot;a&quot; may result in the &quot;salt&quot; of &quot;x&quot;. hash(&quot;a&quot; ^ &quot;x&quot;) is
hardly secure against a rainbow table.

so you're better off maintaining the salt in a separate location
(after all, the threat model is that someone takes the db and has a
list of all the hashes, and then calculates out the passwords) and
still prepend it on before the main passphase.

you may consider, however, that if this &quot;salt&quot; is as long as one block
of the input to the hash algorithm, it effectively becomes a new iv.
but what that has to do with anything; i don't know ...


&gt;<i> Would it be appropriate to call this salt, an IV, or some new term?
</I>&gt;<i>
</I>&gt;<i> --
</I>&gt;<i> Life would be so much easier if it was open-source.
</I>&gt;<i> &lt;URL:<A HREF="http://www.subspacefield.org/~travis/">http://www.subspacefield.org/~travis/</A>&gt; Eff the ineffable!
</I>&gt;<i> For a good time on my UBE blacklist, email <A HREF="http://www.metzdowd.com/mailman/listinfo/cryptography">john at subspacefield.org.</A>
</I>

-- 
mike
<A HREF="http://lets.coozi.com.au/">http://lets.coozi.com.au/</A>

---------------------------------------------------------------------
The Cryptography Mailing List
Unsubscribe by sending &quot;unsubscribe cryptography&quot; to <A HREF="http://www.metzdowd.com/mailman/listinfo/cryptography">majordomo at metzdowd.com</A>

</PRE>