<PRE>Peter Gutmann wrote:
&gt;&gt;<i> If this had been done in the beginning, before users -- and web site
</I>&gt;&gt;<i> designers, and browser vendors -- were mistrained, it might have worked.
</I>&gt;&gt;<i> Now, though?  I'm skeptical.
</I>&gt;<i> 
</I>&gt;<i> For existing apps with habituated users, so am I.  So how about the following
</I>&gt;<i> strawman: Take an existing browser (say Firefox), brand it as some special-
</I>&gt;<i> case secure online banking browser, and use the &quot;new developments&quot; solution
</I>&gt;<i> above, i.e. it only talks mutual-auth challenge-response crypto and nothing
</I>&gt;<i> else.  At that point you've reduced &quot;Reformat user and reinstall browsing
</I>&gt;<i> habits&quot; to &quot;Train users to only use safe-browser when they do their banking,
</I>&gt;<i> i.e. 'Never enter banking details using anything other than safe-browser'&quot;.
</I>&gt;<i> Even if you only get a subset of users doing this, it's still a massive attack
</I>&gt;<i> surface reduction because you've raised the bar from any idiot who buys a
</I>&gt;<i> phishing kit to having to perform a man-in-the-browser attack.
</I>
We've been debating this a lot at Google lately. One argument that I
have increasing sympathy with is that SSO (or if you want to be modern,
federated login) provides an opportunity to change the playing field
sufficiently that we can reprogram users to be less vulnerable to
phishing - or just switch them to protocols that make phishing irrelevant.

To that end, we've released some usability research...

<A HREF="http://google-code-updates.blogspot.com/2008/09/usability-research-on-federated-login.html">http://google-code-updates.blogspot.com/2008/09/usability-research-on-federated-login.html</A>

Obviously the end game here is that the user only has to protect his
login to a small number of sites - i.e. those that provide the IdP. Once
we get there, perhaps users can be persuaded to authenticate to those
sites using something stronger than username/password.

A sidenote that provides me with some amusement: although the modern
trend is towards using OpenID, no-one wants to use it in the mode it is
designed for, i.e. where the user can pick any old IdP and the RP will
just trust it. In practice where we seem to be headed is that RPs will
trust some smallish number of trusted IdPs. This is, of course, exactly
what the Liberty guys have been working on all along. I predict that
over time, most of the elements of Liberty will be incorporated into OpenID.

Which makes me think that if Liberty had done what it claimed to be
doing when it started, i.e. be a community-based, open-source-friendly
protocol suite, it would have worked much better.

Cheers,

Ben.

-- 
<A HREF="http://www.apache-ssl.org/ben.html">http://www.apache-ssl.org/ben.html</A>           <A HREF="http://www.links.org/">http://www.links.org/</A>

&quot;There is no limit to what a man can do or how far he can go if he
doesn't mind who gets the credit.&quot; - Robert Woodruff

---------------------------------------------------------------------
The Cryptography Mailing List
Unsubscribe by sending &quot;unsubscribe cryptography&quot; to <A HREF="http://www.metzdowd.com/mailman/listinfo/cryptography">majordomo at metzdowd.com</A>

</PRE>