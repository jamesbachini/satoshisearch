<PRE>At Mon, 1 Sep 2008 21:00:55 +0100,
Ben Laurie wrote:
&gt;<i> The core issue is that HTTPS is used to establish end-to-end security,
</I>&gt;<i> meaning, in particular, authentication and secrecy. If the MitM can
</I>&gt;<i> disable the upgrade to HTTPS then he defeats this aim. The fact that
</I>&gt;<i> the server declines to serve an HTTP page is irrelevant: it is the
</I>&gt;<i> phisher that will be serving the HTTP page, and he will have no such
</I>&gt;<i> compunction.
</I>&gt;<i>
</I>&gt;<i> The traditional fix is to have the client require HTTPS, which the
</I>&gt;<i> MitM is powerless to interfere with. Upgrades would work fine if the
</I>&gt;<i> HTTPS protocol said &quot;connect on port 80, ask for an upgrade, and if
</I>&gt;<i> you don't get it, fail&quot;, however as it is upgrades work at the behest
</I>&gt;<i> of the server. And therefore don't work.
</I>
Even without an active attacker, this is a problem if there is
sensitive information in the request, since that will generally
be transmitted prior to discovering the server can upgrade.


&gt;<i> Why don't we? Cost. It takes far more tin to serve HTTPS than HTTP.
</I>&gt;<i> Even really serious modern processors can only handle a few thousand
</I>&gt;<i> new SSL sessions per second. New plaintext sessions can be dealt with
</I>&gt;<i> in their tens of thousands.
</I>&gt;<i> 
</I>&gt;<i> Perhaps we should focus on this problem: we need cheap end-to-end
</I>&gt;<i> encryption. HTTPS solves this problem partially through session
</I>&gt;<i> caching, but it can't easily be shared across protocols, and sessions
</I>&gt;<i> typically last on the order of five minutes, an insanely conservative
</I>&gt;<i> figure.
</I>
Session caches are often dialed this low, but it's not really necessary
in most applications. First, a session cache entry isn't really that
big. It easily fits into 100 bytes on the server, so you can serve
a million concurrent user for a measly 100M. Second, you can use
CSSC/Tickets [RFC5077] to offload all the information onto the client.

-Ekr

---------------------------------------------------------------------
The Cryptography Mailing List
Unsubscribe by sending &quot;unsubscribe cryptography&quot; to <A HREF="http://www.metzdowd.com/mailman/listinfo/cryptography">majordomo at metzdowd.com</A>

</PRE>